Link-https://leetcode.com/problems/rotting-oranges/


 int orangesRotting(vector<vector<int>>& grid) {
         int R = grid.size(), C = grid[0].size();
        int row[] = {-1,0,0,1}, col[] = {0,-1,1,0};
        queue<pair<int,int>> q;
        int ones = 0;
        for(int i=0; i<R; i++){
            for(int j=0; j<C; j++){
                if(grid[i][j] == 2)
                    q.push(make_pair(i,j));
                else if(grid[i][j] == 1)
                    ones++;
            }
        }
        if(ones == 0 || grid.size() == 0)
            return 0;
        int count = 0;
        while(!q.empty()){
            int size = q.size();
            if(ones <= 0)
                return count;
            count++;
            for(int i=0; i<size; i++){
                int x = q.front().first;
                int y = q.front().second;
                q.pop();
                for(int k=0; k<4; k++){
                    int X = x + row[k];
                    int Y = y + col[k];
                    if(X < 0 || Y < 0 || X > R-1 || Y > C-1)
                        continue;
                    if(grid[X][Y] == 1){
                        grid[X][Y] = 2;
                        ones--;
                        q.push(make_pair(X,Y));
                    }
                }
            }
        }
        return -1;
    }
